Angular generate commands
====================================

npm init @angular myApp : this cretes new angular application myApp

ng generate component --inline-style --skip-tests  : generates only html and ts files. skils tetsing as well css files
ng generate component --inline-template --inline-style --skip-tests : it generates only ts file by skipping html,css and test


Data binding in angular: 4 ways
======================================
1.Interpolation 		: {{}}
2.Property Binding	: [] => ts file to the template
3.Event binding		: () => template to the ts file
4.Two-way binding		: [(ngModel)] : put banana/football in the box


Angular Directives : types
============================
1.Component directives
2.Attribute directives
3.Structural directives

1.Component directives
These are directives with a template. They define features which will be present in the final HTML. Components are essentially the building blocks of Angular applications.

import { Component } from '@angular/core';

@Component({
  selector: 'app-hello-world',
  template: `<h1>Hello, {{name}}</h1>`
})
export class HelloWorldComponent {
  name = 'Angular';
}


2.Attribute directives
============================

import { Directive, ElementRef, Input } from '@angular/core';

@Directive({
  selector: '[appChangeColor]'
})

export class ChangeColorDirective {
  constructor(el: ElementRef) {
    el.nativeElement.style.color = 'blue';
  }
}

in html temlate, 
<p appChangeColor>This text will be blue.</p>



3.Structural directives: 3 types
==========================================
1.*ngIf
2.*ngFor
3.*ngSwitch


Component Communications
=====================================
In Angular, components often need to communicate with each other to share data or trigger behavior. There are several ways for components to interact:

Input and Output decorators: Parent components can pass data to child components using @Input(), and child components can send events to parent components using @Output(). 

This is a common way for direct parent-child component communication.



Pipes
===============
Angular provides several built-in pipes that allow you to transform and format data within your templates. These pipes are used to perform common data transformations such as filtering, sorting, formatting dates, and more. Here are some of the commonly used built-in pipes in Angular:

{{ value | uppercase }}: Converts a string to uppercase.
{{ value | lowercase }}: Converts a string to lowercase.
{{ value | currency }}: Formats a number as a currency using the local currency symbol.
{{ value | date }}: Formats a date according to the specified format.
{{ object | json }}: converts object into json string format.
{{ value | number }}: Formats a number according to the locale rules.
{{ value | percent }}: Formats a number as a percentage.
{{ value | slice }}: Returns a slice of an array or a string.
{{ value | async }}: Handles asynchronous data streams.

Examples
--------------
    
   ts file (typescript) 
=====================================
date=new Date();

   product={
    id:1,
    name:'Product 1',
    price:100,
    description:'This is a product'
  }
====================================

 template : HTML 
------------------------------------

  <h1>{{'praveen'|uppercase}}</h1>
  <h1>{{'OZVITHA'|lowercase}}</h1>
  <h1>{{'2000'|currency}}</h1>
  <h1>{{'4500'|currency:'INR'}}</h1>
  <h1>Date: {{date | date}}</h1>
  <h1>Short Date: {{date | date:'short'}}</h1>
  <h1>Medium Date: {{date | date:'medium'}}</h1>
  <h1>Custom Date Format: {{date | date:'yyyy-MM-dd'}}</h1>
  <h1>Custom Date Format1: {{date | date:'yyyy-MMM-dd'}}</h1>
  <h1>Custom Date Format2: {{date | date:'yyyy-MMMM-dd'}}</h1>
  <h1>Custom Date Format3: {{date | date:'dd-MMM-yyyy'}}</h1>
  <h1>Long Date: {{date | date:'long'}}</h1>
  <h1>Full Date: {{date | date:'full'}}</h1>
  <h1>Short Time: {{date | date:'shortTime'}}</h1>
  <h1>Medium Time: {{date | date:'mediumTime'}}</h1>
  <h1>Long Time: {{date | date:'longTime'}}</h1>
  <h1>Full Time: {{date | date:'fullTime'}}</h1>
  <hr/>
  <h1>Number1: {{10247347|number}}</h1>
  <h1>Number2: {{5000|percent}}</h1>

    <h1>{{product | json}}</h1>
==========================================================================


  Custom Filters
=========================


Advanced Forms
====================


































































